[
   {
      "name": "chunkyMonkeyArray",
      "desc": "Write a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a two-dimensional array.",
      "inputs": 2,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 415
   },
   {
      "name": "mutations",
      "desc": "Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array.",
      "inputs": 2,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 414
   },
   {
      "name": "sortNumbers",
      "desc": "Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted. The returned value should be a number. type array in first input",
      "inputs": 2,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 413
   },
   {
      "name": "removeFalsy",
      "desc": "type in an array containing a variety of datatypes, function will remove any falsy values",
      "inputs": 1,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 412
   },
   {
      "name": "sliceNSplice",
      "desc": "Use the array methods slice and splice to copy each element of the first array into the second array, in order, Begin inserting elements at index n of the second array. Type first two inputs as arrays [input],[input2],index",
      "inputs": 3,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 411
   },
   {
      "name": "titleCase",
      "desc": "Return the provided string with the first letter of each word capitalized. Make sure the rest of the word is in lower case.",
      "inputs": 1,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 410
   },
   {
      "name": "isABoolean",
      "desc": "Check if a value is classified as a boolean primitive. Return true or false.",
      "inputs": 1,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 409
   },
   {
      "name": "findingElement",
      "desc": "create an Array and see what number passes the truthtest, the new array will take the first number to do so",
      "inputs": 3,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 408
   },
   {
      "name": "truncateString",
      "desc": "Truncate a string (first argument) if it is longer than the given maximum string length (second argument).",
      "inputs": 2,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 407
   },
   {
      "name": "repeatingArray",
      "desc": "Repeat a given string str (first argument) for num times (second argument).",
      "inputs": 2,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 406
   },
   {
      "name": "confirmTheEnd",
      "desc": "Check if a string (first argument, str) ends with the given target string (second argument, target).",
      "inputs": 2,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 405
   },
   {
      "name": "returnLargestNumber",
      "desc": "returns the largest number in arrays (user can type in 3 numbers to add to seperate arrays)",
      "inputs": 3,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 404
   },
   {
      "name": "longestWordString",
      "desc": "Returns the length of the longest word in the provided sentence.",
      "inputs": 1,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 403
   },
   {
      "name": "factorialize",
      "desc": "Return the factorial of the provided integer.",
      "inputs": 1,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 402
   },
   {
      "name": "reverseAString",
      "desc": "reverses the users string",
      "inputs": 1,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 401
   },
   {
      "name": "convertTemp",
      "desc": "converts celsius temp to Fahrenheit",
      "inputs": 1,
      "type": "algorithm",
      "typeNum": 400,
      "isFavorite": false,
      "order": 400
   },

   {
      "name": "someArray",
      "desc": "type in number to see if it is divisble by 5 to pass true in the array [3, 9, 27, 36]",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 313
   },
   {
      "name": "checkString",
      "desc": "type in number to see if everything in the array passed the Criteria that num is less than 500.",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 312
   },
   {
      "name": "convertToUrl",
      "desc": "type the numbers between 1-3 to convert strings into URL",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 311
   },
   {
      "name": "joiningString",
      "desc": "type the numbers between 1-3 to split three different strings and join them together in an array",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 310
   },
   {
      "name": "splittingString",
      "desc": "type the numbers between 1-3 to split three different strings into arrays",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 309
   },
   {
      "name": "doNotChangeArr",
      "desc": "type in a number to add to the following array will return [30, 45, 65, 4, -2 , 43] a sorted one without changing the original array",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 308
   },
   {
      "name": "abcOrder",
      "desc": "type a Capitalized name into to the array [\" Tom\", \" Jim\", \" Emily\", \" Bob\", \" Sam\"] to return a new alphabetical array",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 307
   },
   {
      "name": "complexProblem",
      "desc": "add a string to the array: [3,\"coding\", 4, \"tyler\", true, 5, null, false,\"cat\",userinput] the strings will get filtered out and mapped into a new array which capitalizes each object.",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 306
   },
   {
      "name": "reduceAndAccumulator",
      "desc": "will find the average of the following array, includes the users input: [3, 4, 5, 6, 7, 8, 35, 67, input]",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 305
   },
   {
      "name": "concatNotPush",
      "desc": "type in a color to concatenate its array to another the array [Red, Blue]",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 304
   },
   {
      "name": "userConcat",
      "desc": "type in a number 1-3 to concatenate a new array to the existing one: [\"MJ\", \"Kobe\", \"Lebron\"]",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 303
   },
   {
      "name": "sliceNotSplice",
      "desc": "type in a number 0-5 to slice consoles from the array [\"PS4\",\" Xbox One\", \"Switch\", \"Wii\", \"Dreamcast\"]",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 302
   },
   {
      "name": "sliceArray",
      "desc": "Here is the array [\"Curry\", \" Magic\", \" Kyrie\", \" Stockton\", \" Nash\"], type in two numbers to slice the array. First input = slice start point, Second input = end point",
      "inputs": 2,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 301
   },
   {
      "name": "filteringNumbers",
      "desc": "type a number to see if it is divisible by 4. This array will also be filtered out to see what numbers are divisible by 4. [44, 16, 12, 64, 9, 33, 36, 15]",
      "inputs": 1,
      "type": "functional",
      "typeNum": 300,
      "isFavorite": false,
      "order": 300
   },

   {
      "name": "checkType",
      "desc": "returns the type of the user's input (Boolean, Null, Undefined, Number, String, Symbol, Object)",
      "inputs": 1,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 206
   },
   {
      "name": "checkFor",
      "desc": "type in a color to see if it is in our list",
      "inputs": 1,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 205
   },
   {
      "name": "addSplice",
      "desc": "Remove an item from the shopping cart & add new items to shopping list: [\"eggs\", \"milk\", \"bread\", \"meat\", \"cheese\", \"soda\", \"chips\"] {(index, how many to remove from index, item1, item2)}",
      "inputs": 4,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 204
   },
   {
      "name": "removeSplice",
      "desc": "went over budget. Remove an item from the shopping cart: [\"eggs\", \"milk\", \"bread\", \"meat\", \"cheese\", \"soda\", \"chips\"] {(index, how many to remove from index)}",
      "inputs": 2,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 203
   },
   {
      "name": "generateRandom",
      "desc": "type in the range from min - max: a random number inside the range will generate",
      "inputs": 2,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 202
   },
   {
      "name": "nbaPlayers",
      "desc": "Lookup up the follow players by firstname in this format: \"Michael\", \"Lebron\", \"Kevin\" and their information: \"lastName\", \"jerseyNumber\", \"teams\"",
      "inputs": 2,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 201
   },
   {
      "name": "countingUp",
      "desc": "type in 3 numbers to generate a score, low numbers = +1, high numbers = -1",
      "inputs": 3,
      "type": "intermediate",
      "typeNum": 200,
      "isFavorite": false,
      "order": 200
   },

   {
      "name": "standInLine",
      "desc": "find who's next in line",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 119
   },
   {
      "name": "listVar",
      "desc": "add a new food to our food list (Food, Quantity)",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 118
   },
   {
      "name": "unshiftVar",
      "desc": "add new a breakfast item to list, \"run\" will return new list and replace user input with the first item of the list (\"omelete\", \"waffles\", \"french toast\", \"pancakes\")",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 117
   },
   {
      "name": "shiftVar",
      "desc": "add new fruit to list, \"run\" will return new list and remove the first food in the list (\"chicken\", \"sausage\", \"pork\", \"steak\")",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 116
   },
   {
      "name": "popVar",
      "desc": "add new fruit to list, \"run\" will return new list and remove the fruit at the end of the list (\"bananas\", \"apples\", \"limes\", \"strawberry\")",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 115
   },
   {
      "name": "pushVar",
      "desc": "type a NBA team to have it pushed into Array",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 114
   },
   {
      "name": "lastLetter",
      "desc": "will return the last character in each word",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 113
   },
   {
      "name": "firstLetter",
      "desc": "will return the first letter in each word (play around to create new word)",
      "inputs": 4,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 112
   },
   {
      "name": "findLength",
      "desc": "will return the character length of each input",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 111
   },
   {
      "name": "constructString",
      "desc": "will add favorite fruit to string \"My favorite fruit is a/an... because it is delicious.\"",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 110
   },
   {
      "name": "concatenatePlusEquals",
      "desc": "will concatenate the first string (Name) to second existing string",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 109
   },
   {
      "name": "concatenate",
      "desc": "will concatenate the two inputs together (First box = adjective, Second box = noun)",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 108
   },
   {
      "name": "divDecimal",
      "desc": "divides three decimal numbers",
      "inputs": 3,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 107
   },
   {
      "name": "multiDecimal",
      "desc": "mutiplies decimals",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 106
   },
   {
      "name": "decrement",
      "desc": "subtracts one to existing number",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 105
   },
   {
      "name": "increment",
      "desc": "adds one to existing number",
      "inputs": 1,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 104
   },
   {
      "name": "divide",
      "desc": "Divides the 2 values to equal quotient",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 103
   },
   {
      "name": "multiply",
      "desc": "Multiplies 3 values together",
      "inputs": 3,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 102
   },
   {
      "name": "subtract",
      "desc": "Subtract the two values",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 101
   },
   {
      "name": "add",
      "desc": "Add two values together",
      "inputs": 2,
      "type": "basic",
      "typeNum": 100,
      "isFavorite": false,
      "order": 100
   }
]
